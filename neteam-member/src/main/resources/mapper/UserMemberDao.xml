<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.irvine.neteam.dao.UserMemberDao">

    <resultMap type="org.irvine.neteam.entity.UserMember" id="UserMemberMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="levelId" column="level_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="header" column="header" jdbcType="INTEGER"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="birth" column="birth" jdbcType="TIMESTAMP"/>
        <result property="cityId" column="city_id" jdbcType="INTEGER"/>
        <result property="job" column="job" jdbcType="VARCHAR"/>
        <result property="signature" column="signature" jdbcType="VARCHAR"/>
        <result property="integration" column="integration" jdbcType="INTEGER"/>
        <result property="growth" column="growth" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMemberMap">
        select id,
               level_id,
               username,
               password,
               nickname,
               phone,
               email,
               header,
               gender,
               birth,
               city_id,
               job,
               signature,
               integration,
               growth,
               status,
               create_time
        from user_member
        where id = #{id}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user_member
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="levelId != null">
                and level_id = #{levelId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="header != null">
                and header = #{header}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="birth != null">
                and birth = #{birth}
            </if>
            <if test="cityId != null">
                and city_id = #{cityId}
            </if>
            <if test="job != null and job != ''">
                and job = #{job}
            </if>
            <if test="signature != null and signature != ''">
                and signature = #{signature}
            </if>
            <if test="integration != null">
                and integration = #{integration}
            </if>
            <if test="growth != null">
                and growth = #{growth}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_member(id, level_id, username, password, nickname, phone, email, header, gender, birth,
                                city_id, job, signature, integration, growth, status, create_time)
        values (#{id}, #{levelId}, #{username}, #{password}, #{nickname}, #{phone}, #{email}, #{header}, #{gender},
                #{birth}, #{cityId}, #{job}, #{signature}, #{integration}, #{growth}, #{status}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_member(id, level_id, username, password, nickname, phone, email, header, gender, birth,
        city_id, job, signature, integration, growth, status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.levelId}, #{entity.username}, #{entity.password}, #{entity.nickname},
            #{entity.phone}, #{entity.email}, #{entity.header}, #{entity.gender}, #{entity.birth}, #{entity.cityId},
            #{entity.job}, #{entity.signature}, #{entity.integration}, #{entity.growth}, #{entity.status},
            #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_member(id, level_id, username, password, nickname, phone, email, header, gender, birth,
        city_id, job, signature, integration, growth, status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.levelId}, #{entity.username}, #{entity.password}, #{entity.nickname},
            #{entity.phone}, #{entity.email}, #{entity.header}, #{entity.gender}, #{entity.birth}, #{entity.cityId},
            #{entity.job}, #{entity.signature}, #{entity.integration}, #{entity.growth}, #{entity.status},
            #{entity.createTime})
        </foreach>
        on duplicate key update
        id = values(id),
        level_id = values(level_id),
        username = values(username),
        password = values(password),
        nickname = values(nickname),
        phone = values(phone),
        email = values(email),
        header = values(header),
        gender = values(gender),
        birth = values(birth),
        city_id = values(city_id),
        job = values(job),
        signature = values(signature),
        integration = values(integration),
        growth = values(growth),
        status = values(status),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user_member
        <set>
            <if test="levelId != null">
                level_id = #{levelId},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="header != null">
                header = #{header},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="cityId != null">
                city_id = #{cityId},
            </if>
            <if test="job != null and job != ''">
                job = #{job},
            </if>
            <if test="signature != null and signature != ''">
                signature = #{signature},
            </if>
            <if test="integration != null">
                integration = #{integration},
            </if>
            <if test="growth != null">
                growth = #{growth},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user_member
        where id = #{id}
    </delete>

</mapper>

